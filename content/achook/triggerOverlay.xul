<?xml version="1.0"?>
<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
<overlay xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  <script type="application/x-javascript" src="./triggerOverlay.js" />
  <script type="application/x-javascript"><![CDATA[
    var { StaticConfigManager } = Components.utils.import("resource://achook-modules/StaticConfig.js", {});

    window.addEventListener("DOMContentLoaded", function AchookTriggerSetup(event) {
      window.removeEventListener("DOMContentLoaded", AchookTriggerSetup, false);

      const { classes: Cc, interfaces: Ci, utils: Cu, results: Cr } = Components;
      const { Preferences } = Cu.import('resource://achook-modules/Preferences.js', {});
      const { PreferenceNames } = Cu.import('resource://achook-modules/PreferenceNames.js', {});
      const preferences = new Preferences("");
      const Messages = {
        _messages : new Preferences("extensions.achook."),
        getLocalized: function (key, defaultValue) {
          if (this._messages.has(key + ".override"))
            key += ".override";
          return this._messages.getLocalized(key, defaultValue);
        }
      };

      var menuPopup = document.getElementById("menu_NewPopup");
      var menuNextItem = document.getElementById("newMailAccountMenuItem").nextSibling;

      var appmenuPopup = document.getElementById("appmenu_newMenupopup");
      var appmenuNextItem = appmenuPopup ? document.getElementById("appmenu_newMailAccountMenuItem").nextSibling : null ;

      var labelBase = Messages.getLocalized("newMailAccountMenuItem.label");
      var accesskeyBase = Messages.getLocalized("newMailAccountMenuItem.accesskey");

      StaticConfigManager.configs.forEach(function(aConfig) {
        var id = "newMailAccountMenuItem_achook_staticConfig_" + aConfig.name;
        var appmenuId = "appmenu_" + id;

        var item = document.createElement("menuitem");
        item.setAttribute("id", id);
        item.setAttribute("class", "achookNewCustomAccountItem");
        item.setAttribute("label", aConfig.label);
        item.setAttribute("accesskey", aConfig.accesskey);
        item.setAttribute("hidden", true);
        item.setAttribute("data-config", aConfig.name);
        item.setAttribute("oncommand", "AchookNewCustomMailAccount(this.getAttribute('data-config'));");
        menuPopup.insertBefore(item, menuNextItem);

        if (appmenuPopup) {
          let appmenuItem = document.createElement("menuitem");
          appmenuItem.setAttribute("id", appmenuId);
          appmenuItem.setAttribute("class", "achookNewCustomAccountItem");
          appmenuItem.setAttribute("label", aConfig.label);
          appmenuItem.setAttribute("accesskey", aConfig.accesskey);
          appmenuItem.setAttribute("hidden", true);
          appmenuItem.setAttribute("data-config", aConfig.name);
          appmenuItem.setAttribute("oncommand", "AchookNewCustomMailAccount(this.getAttribute('data-config'));");
          appmenuPopup.insertBefore(appmenuItem, appmenuNextItem);
        }
      });
    }, false);

    // initial wizard should use static config
    if ("AutoConfigWizard" in window) {
      eval("window.AutoConfigWizard = "+window.AutoConfigWizard.toSource().replace(
        /(NewMailAccount\([^;]+okCallback)(\))/g,
        "$1, { __achook__staticConfig : StaticConfigManager.defaultConfig }$2"
      ));
    } else {
      Application.console.log("achook: AutoConfigWizard is not defined!");
    }
  ]]></script>
</overlay>
